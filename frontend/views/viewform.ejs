
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>View Form</title>

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7"
      crossorigin="anonymous"
    />

    <style>
      body {
        min-height: 100vh;
        background: linear-gradient(
            rgba(0, 0, 0, 0.6),
            rgba(0, 0, 0, 0.6)
          ),
          url('/static/images/image copy 3.png') no-repeat center center/cover;
        color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
      }
      .form-wrapper {
        background: rgba(10, 10, 10, 0.1);
        padding: 30px;
        border-radius: 15px;
        width: 100%;
        max-width: 600px;
      }
     
     
      .custom-btn {
        padding: 12px 20px;
        margin-top: 20px;
        width: 100%;
        font-size: 18px;
        font-weight: bold;
        border: none;
        border-radius: 10px;
        background-color: #0d6efd;
        transition: 0.3s ease;
      }
    </style>
  </head>

  <body>
    <div class="form-wrapper">
     
    </div>

    <script>
      function viewForm(event) {
        const formId = window.location.pathname.split("/").pop();
        const form = document.createElement("form");
        const params = new URLSearchParams(window.location.search);
        const edit = params.get("edit");

        const token = localStorage.getItem('token'); 

        if (!token) {
          alert("Unauthorized Access! Please login first.");
          window.location.href = "/login";
          return;
        }

        fetch(`http://localhost:5000/admin/form/${formId}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`, 
          },
        })
          .then((response) => {
            if (response.status === 401) {
              alert("Session expired. Please login again.");
              window.location.href = "/login"; 
              return;
            }
            return response.json();
          })
          .then((formData) => {
            if (!formData) return;

            console.log("Form Data:", formData);
            formData = formData["data"];

            const fieldSets = formData.formFields.filter(
              (field) => Object.keys(field)[0] !== "fieldSet"
            );

            fieldSets.forEach((data, index) => {
              const keys = Object.keys(data);
              const opt = keys[0];
              const inputElement = data[opt];

              if (!inputElement) {
                console.warn(`Invalid input element at index ${index}:`, data);
                return;
              }

              if (opt === "input") {
                const divElement = document.createElement("div");
                divElement.classList.add("mb-3");

                const label = document.createElement("label");
                label.textContent = inputElement["mainLabel"] || "Label";
                label.classList.add("form-label");
                label.setAttribute("for", `${inputElement["mainLabel"] || "input"}-${index}`);

                const inp = document.createElement("input");
                inp.setAttribute("type", inputElement["inputType"] || "text");
                inp.classList.add("form-control");
                inp.setAttribute("id", `${inputElement["mainLabel"] || "input"}-${index}`);
                inp.setAttribute("name", `${inputElement["mainLabel"] || "input"}-${index}`);

                if (inputElement.inputvalidation) {
                  inputElement.inputvalidation.forEach((ele) => {
                    if (ele["prop"] && ele["val"]) {
                      inp.setAttribute(ele["prop"], ele["val"]);
                    }
                  });
                }

                if (inputElement.shortHand) {
                  inputElement.shortHand.forEach((ele) => {
                    if (ele) {
                      inp.setAttribute(ele, "");
                    }
                  });
                }

                divElement.appendChild(label);
                divElement.appendChild(inp);
                form.appendChild(divElement);
              } 
              else if (opt === "radio") {
                const mainLabel = document.createElement("label");
                mainLabel.classList.add("form-label", "d-block");
                mainLabel.textContent = inputElement["mainLabel"];
                form.appendChild(mainLabel);

                inputElement.options.forEach((dat, ind) => {
                  const divElement = document.createElement("div");
                  divElement.classList.add("form-check", "form-check-inline");

                  const inp = document.createElement("input");
                  inp.setAttribute("type", "radio");
                  inp.setAttribute("value", dat);
                  inp.setAttribute("id", `radio-${dat}-${index}`);
                  inp.setAttribute("name", `radioGroup${index}`);
                  inp.classList.add("form-check-input");

                  const label = document.createElement("label");
                  label.textContent = dat;
                  label.setAttribute("for", `radio-${dat}-${index}`);
                  label.classList.add("form-check-label");

                  divElement.appendChild(inp);
                  divElement.appendChild(label);
                  form.appendChild(divElement);
                });
              } 
              else if (opt === "checkbox") {

const options = inputElement.options || [];

const mainLabelText = inputElement["mainLabel"];

if (options.length === 0) {

    const divElement = document.createElement("div");

    divElement.classList.add("form-check");

    const inp = document.createElement("input");

    inp.setAttribute("type", "checkbox");

    inp.setAttribute("id", `checkbox-single-${index}`);

    inp.setAttribute("name", `checkGroup-${index}`);

    inp.classList.add("form-check-input");


    if (data[index] === true || data[index] === "true") {

        inp.setAttribute("checked", "");

    }

    const mainLabel = document.createElement("label");
    mainLabel.setAttribute("for", `checkbox-single-${index}`);
    mainLabel.classList.add("form-check-label");
    mainLabel.textContent = mainLabelText;
    divElement.appendChild(inp);
    divElement.appendChild(mainLabel);
    form.appendChild(divElement);

} else {

    const mainLabel = document.createElement("label");
    mainLabel.classList.add("form-label", "d-block");
    mainLabel.textContent = mainLabelText;
    form.appendChild(mainLabel);
    options.forEach((dat, ind) => {
        const divElement = document.createElement("div");
        divElement.classList.add("form-check", "form-check-inline");
        const inp = document.createElement("input");
        inp.setAttribute("type", "checkbox");
        inp.setAttribute("id", `checkbox-${dat}-${ind}`);
        inp.setAttribute("name", `checkGroup-${index}`);
        inp.classList.add("form-check-input");

        if (Array.isArray(data[index]) && data[index].includes(dat)) {
            inp.setAttribute("checked", "");
        }
        const label = document.createElement("label");
        label.textContent = dat;
        label.setAttribute("for", `checkbox-${dat}-${ind}`);
        label.classList.add("form-check-label");
        divElement.appendChild(inp);
        divElement.appendChild(label);
        form.appendChild(divElement);

    });
}
}
           else if (opt === "select") {
                const divWrapper = document.createElement("div");
                divWrapper.classList.add("mb-3");

                const label = document.createElement("label");
                label.setAttribute("for", `select-${opt}`);
                label.textContent = `Choose ${inputElement["mainLabel"]}`;

                const selectDiv = document.createElement("select");
                selectDiv.classList.add("form-select");
                selectDiv.setAttribute("id", `select-${opt}`);

                inputElement.options.forEach((dat) => {
                  const option = document.createElement("option");
                  option.setAttribute("value", dat);
                  option.textContent = dat;
                  selectDiv.appendChild(option);
                });

                divWrapper.appendChild(label);
                divWrapper.appendChild(selectDiv);
                form.appendChild(divWrapper);
              } 
              else if (opt === "textArea") {
                const divElement = document.createElement("div");
                divElement.classList.add("mb-3");

                const label = document.createElement("label");
                label.textContent = inputElement["mainLabel"][0] || "Text Area";
                label.classList.add("form-label");
                label.setAttribute("for", `${inputElement["mainLabel"][0] || "textarea"}-${index}`);

                const textarea = document.createElement("textarea");
                textarea.classList.add("form-control");
                textarea.setAttribute("id", `${inputElement["mainLabel"][0] || "textarea"}-${index}`);
                textarea.setAttribute("name", `${inputElement["mainLabel"][0] || "textarea"}-${index}`);

                if (inputElement.inputValidation) {
                  inputElement.inputValidation.forEach((ele) => {
                    if (ele["prop"] && ele["val"]) {
                      textarea.setAttribute(ele["prop"], ele["val"]);
                    }
                  });
                }

                if (inputElement.shortHand) {
                  inputElement.shortHand.forEach((ele) => {
                    if (ele) {
                      textarea.setAttribute(ele, "");
                    }
                  });
                }

                divElement.appendChild(label);
                divElement.appendChild(textarea);
                form.appendChild(divElement);
              } 
              else if (["date", "email", "number", "file", "color", "range", "tel", "datetime-local","text"].includes(opt)) {
                const divElement = document.createElement("div");
                divElement.classList.add("mb-3");

                const label = document.createElement("label");
                label.textContent = inputElement["mainLabel"] || "Label";
                label.classList.add("form-label");
                label.setAttribute("for", `${inputElement["mainLabel"] || "input"}-${index}`);

                const inp = document.createElement("input");
                inp.setAttribute("type", opt);
                inp.classList.add("form-control");
                inp.setAttribute("id", `${inputElement["mainLabel"] || "input"}-${index}`);
                inp.setAttribute("name", `${inputElement["mainLabel"] || "input"}-${index}`);

                if (inputElement.inputValidation) {
                  inputElement.inputValidation.forEach((ele) => {
                    if (ele["prop"] && ele["val"]) {
                      inp.setAttribute(ele["prop"], ele["val"]);
                    }
                  });
                }

                if (inputElement.shortHand) {
                  inputElement.shortHand.forEach((ele) => {
                    if (ele) {
                      inp.setAttribute(ele, "");
                    }
                  });
                }

                divElement.appendChild(label);
                divElement.appendChild(inp);
                form.appendChild(divElement);
              }
            });

            const submitBtn = document.createElement("button");
            submitBtn.type = "button";
            submitBtn.classList.add("custom-btn");
            submitBtn.textContent = edit ? "Update" : "Submit";

            form.appendChild(submitBtn);

            document.querySelector(".form-wrapper").appendChild(form);
          })
          .catch((err) => console.error("Error fetching form data:", err));
      }

      document.addEventListener("DOMContentLoaded", viewForm);
    </script>
  </body>
</html>


